package module;

import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Properties;

import org.apache.log4j.Logger;
import org.apache.log4j.PropertyConfigurator;

import com.pedidosya.reception.sdk.ApiClient;

import module.integracion.MantenedorPrecios;
import module.integracion.bd.ErrorBaseDatos;

public class PeyaActualizaPrecios {

	private static final String version = "1.0.0 (28-12-2022)";
	protected static String log4jConfigFile = "actualizaPrecios_log4j.properties";
	private static Logger logger = Logger.getLogger(PeyaActualizaPrecios.class);

	public static PeyaActualizaPrecios instance = null;
	
	public static PeyaActualizaPrecios getInstance() {
		if (instance == null)
			instance = new PeyaActualizaPrecios();
		return instance;
	}
	
	public static void main(String[] args) {
		try {
			Properties properties = new Properties();
			properties.load(PeyaActualizaPrecios.class.getClassLoader()
					.getResourceAsStream("actualizaPrecios_log4j.properties"));
			PropertyConfigurator.configure(properties);

			Properties integracionProps = new Properties();
			try (final java.io.InputStream stream = PeyaActualizaPrecios.class.getClassLoader()
					.getResourceAsStream("integracion.properties")) {
				if (stream == null)
					throw new RuntimeException("stream es nulo");
				integracionProps.load(stream);
			}
			String propAmbiente = System.getProperty("peya.actualizaPrecios.ambiente");
			if (propAmbiente == null)
				propAmbiente = integracionProps.getProperty("peya.actualizaPrecios.ambiente");
			SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yy-HH:mm:ss.SSS");
			logger.info(String.format("[ %s ] PeyaController - %s  is running a %s", sdf.format(new Date()), version,
					propAmbiente));
			Token token = new Token();
			ApiClient apiClient = new ApiClient(token.getCentralizedConnection(propAmbiente));

			String idServidor = System.getProperty("peya.actualizaPrecios.idServidor");
			if (idServidor == null)
				idServidor = integracionProps.getProperty("peya.actualizaPrecios.idServidor");
			String numThreads = integracionProps.getProperty("peya.actualizaPrecios.numThreads");
			if (numThreads == null)
				numThreads = integracionProps.getProperty("peya.actualizaPrecios.numThreads");
			
			MantenedorPrecios mantenedor = new MantenedorPrecios(apiClient, idServidor, numThreads, integracionProps);
			mantenedor.actualizaPrecios();
			
			System.exit(0);
		} catch (IOException e) {
			System.out.println("No pudo leer archivos de propiedades");
			e.printStackTrace();
			System.exit(1);
		} catch (ErrorBaseDatos e) {
			System.out.println("No pudo inicializar pool de conexiones a la base de datos");
			e.printStackTrace();
			System.exit(1);
		}
	}

}
